{
  "contractName": "AddressUtils",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Utility library of inline functions on addresses.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol Requires EIP-1052.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/lowesyang/Documents/Byterum/Products/NFT-GO/moonlight/erc721-contract/contracts/utils/address.sol\":\"AddressUtils\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/lowesyang/Documents/Byterum/Products/NFT-GO/moonlight/erc721-contract/contracts/utils/address.sol\":{\"keccak256\":\"0x81d7d6a2b97d44f8e911edc18e602ad4e10f36220d40ba5c012430f7b2dca196\",\"urls\":[\"bzz-raw://2bf33cdd4371764caaa4fb3e96ea5138ecdca5a3c904fffceccdec42c306d568\",\"dweb:/ipfs/QmfRt66XJELfJyAt7YwHP7fcsmMKDjMu8o5PRBu1C7diWR\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e88c77d05d435d8503f878b53e96cd9b6df57a36e4fa3cca3f9989ed68e085c64736f6c63430008040033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209e88c77d05d435d8503f878b53e96cd9b6df57a36e4fa3cca3f9989ed68e085c64736f6c63430008040033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "232:1059:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "232:1059:9:-:0;;;;;;;;",
  "source": "pragma solidity ^0.8.4;\n\n/**\n * @dev Utility library of inline functions on addresses.\n * @notice Based on:\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\n * Requires EIP-1052.\n */\nlibrary AddressUtils {\n    /**\n     * @dev Returns whether the target address is a contract.\n     * @param _addr Address to check.\n     * @return addressCheck True if _addr is a contract, false if not.\n     */\n    function isContract(address _addr)\n        internal\n        view\n        returns (bool addressCheck)\n    {\n        // This method relies in extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\n        // for accounts without code, i.e. `keccak256('')`\n        bytes32 codehash;\n\n        bytes32 accountHash =\n            0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\n        assembly {\n            codehash := extcodehash(_addr)\n        } // solhint-disable-line\n        addressCheck = (codehash != 0x0 && codehash != accountHash);\n    }\n}\n",
  "sourcePath": "/Users/lowesyang/Documents/Byterum/Products/NFT-GO/moonlight/erc721-contract/contracts/utils/address.sol",
  "ast": {
    "absolutePath": "/Users/lowesyang/Documents/Byterum/Products/NFT-GO/moonlight/erc721-contract/contracts/utils/address.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1796
      ]
    },
    "id": 1797,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1766,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1767,
          "nodeType": "StructuredDocumentation",
          "src": "25:206:9",
          "text": " @dev Utility library of inline functions on addresses.\n @notice Based on:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\n Requires EIP-1052."
        },
        "fullyImplemented": true,
        "id": 1796,
        "linearizedBaseContracts": [
          1796
        ],
        "name": "AddressUtils",
        "nameLocation": "240:12:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1794,
              "nodeType": "Block",
              "src": "551:738:9",
              "statements": [
                {
                  "assignments": [
                    1776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1776,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nameLocation": "998:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "990:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1775,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "990:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1777,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "990:16:9"
                },
                {
                  "assignments": [
                    1779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1779,
                      "mutability": "mutable",
                      "name": "accountHash",
                      "nameLocation": "1025:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "1017:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1778,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1017:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1781,
                  "initialValue": {
                    "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1051:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                      "typeString": "int_const 8947...(69 digits omitted)...1552"
                    },
                    "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1017:100:9"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1136:54:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1150:30:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "1174:5:9"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "1162:11:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1162:18:9"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "1150:8:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1770,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1174:5:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1776,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1150:8:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 1782,
                  "nodeType": "InlineAssembly",
                  "src": "1127:63:9"
                },
                {
                  "expression": {
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1783,
                      "name": "addressCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "1223:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1784,
                              "name": "codehash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "1239:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "307830",
                              "id": 1785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1251:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            },
                            "src": "1239:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1787,
                              "name": "codehash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "1258:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1788,
                              "name": "accountHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "1270:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "1258:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1239:42:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1791,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1238:44:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1223:59:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:59:9"
                }
              ]
            },
            "documentation": {
              "id": 1768,
              "nodeType": "StructuredDocumentation",
              "src": "259:182:9",
              "text": " @dev Returns whether the target address is a contract.\n @param _addr Address to check.\n @return addressCheck True if _addr is a contract, false if not."
            },
            "id": 1795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "455:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "474:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "466:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:15:9"
            },
            "returnParameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "addressCheck",
                  "nameLocation": "533:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "528:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:19:9"
            },
            "scope": 1796,
            "src": "446:843:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1797,
        "src": "232:1059:9",
        "usedErrors": []
      }
    ],
    "src": "0:1292:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/lowesyang/Documents/Byterum/Products/NFT-GO/moonlight/erc721-contract/contracts/utils/address.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1796
      ]
    },
    "id": 1797,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1766,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 1767,
          "nodeType": "StructuredDocumentation",
          "src": "25:206:9",
          "text": " @dev Utility library of inline functions on addresses.\n @notice Based on:\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol\n Requires EIP-1052."
        },
        "fullyImplemented": true,
        "id": 1796,
        "linearizedBaseContracts": [
          1796
        ],
        "name": "AddressUtils",
        "nameLocation": "240:12:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1794,
              "nodeType": "Block",
              "src": "551:738:9",
              "statements": [
                {
                  "assignments": [
                    1776
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1776,
                      "mutability": "mutable",
                      "name": "codehash",
                      "nameLocation": "998:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "990:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1775,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "990:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1777,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "990:16:9"
                },
                {
                  "assignments": [
                    1779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1779,
                      "mutability": "mutable",
                      "name": "accountHash",
                      "nameLocation": "1025:11:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1794,
                      "src": "1017:19:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1778,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1017:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1781,
                  "initialValue": {
                    "hexValue": "307863356432343630313836663732333363393237653764623264636337303363306535303062363533636138323237336237626661643830343564383561343730",
                    "id": 1780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1051:66:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_89477152217924674838424037953991966239322087453347756267410168184682657981552_by_1",
                      "typeString": "int_const 8947...(69 digits omitted)...1552"
                    },
                    "value": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1017:100:9"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1136:54:9",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1150:30:9",
                        "value": {
                          "arguments": [
                            {
                              "name": "_addr",
                              "nodeType": "YulIdentifier",
                              "src": "1174:5:9"
                            }
                          ],
                          "functionName": {
                            "name": "extcodehash",
                            "nodeType": "YulIdentifier",
                            "src": "1162:11:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1162:18:9"
                        },
                        "variableNames": [
                          {
                            "name": "codehash",
                            "nodeType": "YulIdentifier",
                            "src": "1150:8:9"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "istanbul",
                  "externalReferences": [
                    {
                      "declaration": 1770,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1174:5:9",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1776,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1150:8:9",
                      "valueSize": 1
                    }
                  ],
                  "id": 1782,
                  "nodeType": "InlineAssembly",
                  "src": "1127:63:9"
                },
                {
                  "expression": {
                    "id": 1792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1783,
                      "name": "addressCheck",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1773,
                      "src": "1223:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1784,
                              "name": "codehash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "1239:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "307830",
                              "id": 1785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1251:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            },
                            "src": "1239:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "id": 1789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1787,
                              "name": "codehash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1776,
                              "src": "1258:8:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 1788,
                              "name": "accountHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1779,
                              "src": "1270:11:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "src": "1258:23:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1239:42:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 1791,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "1238:44:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1223:59:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1793,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:59:9"
                }
              ]
            },
            "documentation": {
              "id": 1768,
              "nodeType": "StructuredDocumentation",
              "src": "259:182:9",
              "text": " @dev Returns whether the target address is a contract.\n @param _addr Address to check.\n @return addressCheck True if _addr is a contract, false if not."
            },
            "id": 1795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isContract",
            "nameLocation": "455:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1770,
                  "mutability": "mutable",
                  "name": "_addr",
                  "nameLocation": "474:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "466:13:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1769,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "466:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "465:15:9"
            },
            "returnParameters": {
              "id": 1774,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1773,
                  "mutability": "mutable",
                  "name": "addressCheck",
                  "nameLocation": "533:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1795,
                  "src": "528:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1772,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "528:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "527:19:9"
            },
            "scope": 1796,
            "src": "446:843:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1797,
        "src": "232:1059:9",
        "usedErrors": []
      }
    ],
    "src": "0:1292:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.4+commit.c7e474f2.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-06-16T08:18:38.713Z",
  "devdoc": {
    "details": "Utility library of inline functions on addresses.",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Based on: https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/Address.sol Requires EIP-1052.",
    "version": 1
  }
}